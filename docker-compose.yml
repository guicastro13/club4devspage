services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: club4devs_backend
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_DB: ${POSTGRES_DB}
      PORT: 3001
    depends_on:
      - db
    networks:
      - app-network
  db:
    image: postgres:15-alpine
    container_name: club4devs_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
  nginx:
    container_name: club4devs_nginx
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./chatwoot.nginx.conf:/etc/nginx/conf.d/chatwoot.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - chatwoot-web
    restart: always
    networks:
      - app-network

  certbot:
    container_name: club4devs_certbot
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $!; done;'"
    #command: ["certonly", "--webroot", "--webroot-path=/var/www/certbot", "--email", "guii_1@hotmail.com", "--agree-tos", "--no-eff-email", "-d", "${DOMAIN}", "-d", "${WWW_DOMAIN}"]
    environment:
      - DOMAIN=${DOMAIN}
      - WWW_DOMAIN=${WWW_DOMAIN}
  chatwoot-redis:
    image: redis:7.0-alpine
    container_name: chatwoot_redis
    restart: always
    volumes:
      - chatwoot_redis_data:/data
    # Se você definiu REDIS_PASSWORD em .env.chatwoot, adicione o comando:
    # command: redis-server --requirepass SUA_SENHA_DO_REDIS
    networks:
      - app-network

  chatwoot-web: # Anteriormente 'rails' no exemplo do Chatwoot
    image: chatwoot/chatwoot:latest # Ou uma tag específica, ex: v3.5.0
    container_name: chatwoot_web
    restart: always
    environment:
      POSTGRES_HOST: db
      POSTGRES_DATABASE: chatwoot_production # Nome sugerido para o banco de dados do Chatwoot
      POSTGRES_USER: chatwoot_user # Nome sugerido para o usuário do Chatwoot
      POSTGRES_PASSWORD: SENHA_SEGURA_PARA_CHATWOOT_USER # Defina uma senha forte
      RAILS_ENV: production
      REDIS_URL: redis://chatwoot-redis:6379/0
      FRONTEND_URL: https://chat.club4devs.com.br
      SECRET_KEY_BASE: zTfqF5bkCbM26tf9v9ycIPWVIA1QrWUQiXMT7op8j9XnuRtiuTpZlT7DBqakJWAD
    #env_file: .env.chatwoot # Carrega as variáveis do arquivo .env.chatwoot
    depends_on:
      - db
      - chatwoot-redis
    #  - "127.0.0.1:3000:3000" # Somente se precisar de acesso local direto para debug
    volumes:
      - chatwoot_data:/app/storage # Para armazenamento local de anexos, se ACTIVE_STORAGE_SERVICE=local
    networks:
      - app-network

  chatwoot-worker: # Anteriormente 'sidekiq' no exemplo do Chatwoot
    image: chatwoot/chatwoot:latest # Use a MESMA tag que o chatwoot-web
    container_name: chatwoot_worker
    restart: always
    environment:
      POSTGRES_HOST: db
      POSTGRES_DATABASE: chatwoot_production # Nome sugerido para o banco de dados do Chatwoot
      POSTGRES_USER: chatwoot_user # Nome sugerido para o usuário do Chatwoot
      POSTGRES_PASSWORD: SENHA_SEGURA_PARA_CHATWOOT_USER # Defina uma senha forte
      RAILS_ENV: production
      REDIS_URL: redis://chatwoot-redis:6379/0
      FRONTEND_URL: https://chat.club4devs.com.br
      SECRET_KEY_BASE: zTfqF5bkCbM26tf9v9ycIPWVIA1QrWUQiXMT7op8j9XnuRtiuTpZlT7DBqakJWAD
    depends_on:
      - db
      - chatwoot-redis
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - chatwoot_data:/app/storage # Compartilha o mesmo volume se ACTIVE_STORAGE_SERVICE=local
    networks:
      - app-network

volumes:
  postgres_data:
  certbot_conf:
  certbot_www:
  chatwoot_redis_data:
  chatwoot_data:

networks:
  app-network:
    driver: bridge
