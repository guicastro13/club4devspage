# chatwoot.nginx.conf

server {
    listen 80;
    listen [::]:80;
    server_name chat.club4devs.com.br; # SEU SUBDOMÍNIO PARA O CHATWOOT

    # Para o desafio do Let's Encrypt (Certbot)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot; # Mesmo caminho usado pelo seu Certbot
        # access_log /var/log/nginx/acme_access.log main_ext; # Opcional, se quiser logs separados
        # error_log /var/log/nginx/acme_error.log error;    # Opcional
    }

    location / {
        return 301 https://$host$request_uri; # Redireciona HTTP para HTTPS
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name chat.club4devs.com.br; # SEU SUBDOMÍNIO PARA O CHATWOOT

    # --- Configurações SSL (Certbot irá gerenciar isso) ---
    # Os caminhos dos certificados serão para chat.club4devs.com.br
    ssl_certificate /etc/letsencrypt/live/chat.club4devs.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/chat.club4devs.com.br/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/chat.club4devs.com.br/chain.pem;

    # Suas configurações SSL existentes (copiadas e adaptadas)
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_stapling on;
    ssl_stapling_verify on;

    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always; # Chatwoot pode precisar de SAMEORIGIN para o widget embutido. Teste.
                                          # Se o widget não funcionar, tente: add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # Permissions-Policy pode precisar ser ajustada se o Chatwoot usar recursos específicos
    add_header Permissions-Policy "geolocation=(), midi=(), camera=(), microphone=(), display-capture=(), magnetometer=(), accelerometer=(), gyroscope=(), payment=()" always;

    access_log /var/log/nginx/chatwoot_access.log main_ext; # Log dedicado
    error_log /var/log/nginx/chatwoot_error.log error;   # Log dedicado

    client_max_body_size 25m; # Chatwoot lida com anexos, pode precisar aumentar

    # Aponta para o serviço Docker do Chatwoot na porta que ele escuta internamente
    set $upstream chatwoot-web:3000; # Nome do container e porta do Chatwoot

    # Necessário para o Chatwoot API e WebSockets
    underscores_in_headers on;

    # Para o desafio do Let's Encrypt (Certbot) - também no bloco SSL
    # pois o Certbot pode tentar renovar usando a porta 443
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        proxy_pass http://$upstream;
        proxy_http_version 1.1; # Necessário para WebSockets

        # Cabeçalhos para WebSockets
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Accept-Encoding ""; # Evita problemas com codificação duplicada

        # Timeout (ajuste conforme necessário)
        proxy_read_timeout 36000s; # Chatwoot recomenda um timeout longo
        proxy_send_timeout 300s;
        proxy_connect_timeout 300s;

        proxy_buffering off; # Recomendado pelo Chatwoot
        client_max_body_size 0; # Ou um limite específico como 25m
        proxy_redirect off;
    }
}